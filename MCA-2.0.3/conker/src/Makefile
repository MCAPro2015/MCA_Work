# Makefile.in generated by automake 1.9.6 from Makefile.am.
# conker/src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



srcdir = .
top_srcdir = ../..

pkgdatadir = $(datadir)/mca
pkglibdir = $(libdir)/mca
pkgincludedir = $(includedir)/mca
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = powerpc-unknown-linux-gnu
bin_PROGRAMS = tc_example_pthread$(EXEEXT) tc_example_fork$(EXEEXT) \
	tc_echo_pthread$(EXEEXT) tc_echo_fork$(EXEEXT) \
	tc_overlap_pthread$(EXEEXT) tc_overlap_fork$(EXEEXT) \
	tc_fury_pthread$(EXEEXT) tc_fury_fork$(EXEEXT) \
	tc_lock_pthread$(EXEEXT) tc_lock_fork$(EXEEXT) \
	tc_example_mtapi$(EXEEXT) tc_echo_mtapi$(EXEEXT) \
	tc_overlap_mtapi$(EXEEXT) tc_fury_mtapi$(EXEEXT)
subdir = conker/src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/macros/c-setup.m4 \
	$(top_srcdir)/macros/libtool.m4 \
	$(top_srcdir)/macros/ltoptions.m4 \
	$(top_srcdir)/macros/ltsugar.m4 \
	$(top_srcdir)/macros/ltversion.m4 \
	$(top_srcdir)/macros/lt~obsolete.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/mca_config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = th_fork.$(OBJEXT)
am__objects_2 = posix_utils.$(OBJEXT)
am__objects_3 = mca_utils.$(OBJEXT) $(am__objects_2) \
	th_common.$(OBJEXT)
am_tc_echo_fork_OBJECTS = tc_echo.$(OBJEXT) $(am__objects_1) \
	$(am__objects_3)
tc_echo_fork_OBJECTS = $(am_tc_echo_fork_OBJECTS)
am__DEPENDENCIES_1 =  \
	../../mcapi/src/mcapi_trans/mcapi_trans_sm/mrapi/libmcapi.la
am__DEPENDENCIES_2 = ../../mrapi/src/mrapi_impl/sysvr4/libmrapi.la
#am__DEPENDENCIES_2 = ../../mrapi/src/mrapi_impl/baremetal/powerpc/libmrapi.la
tc_echo_fork_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am__objects_4 = th_mtapi.$(OBJEXT)
am_tc_echo_mtapi_OBJECTS = tc_echo.$(OBJEXT) $(am__objects_4) \
	$(am__objects_3)
tc_echo_mtapi_OBJECTS = $(am_tc_echo_mtapi_OBJECTS)
am__DEPENDENCIES_3 = ../../mtapi/src/libmtapi.la
tc_echo_mtapi_DEPENDENCIES = $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am__objects_5 = th_pthreads.$(OBJEXT)
am_tc_echo_pthread_OBJECTS = tc_echo.$(OBJEXT) $(am__objects_5) \
	$(am__objects_3)
tc_echo_pthread_OBJECTS = $(am_tc_echo_pthread_OBJECTS)
tc_echo_pthread_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_tc_example_fork_OBJECTS = tc_example.$(OBJEXT) $(am__objects_1) \
	$(am__objects_3)
tc_example_fork_OBJECTS = $(am_tc_example_fork_OBJECTS)
tc_example_fork_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_tc_example_mtapi_OBJECTS = tc_example.$(OBJEXT) $(am__objects_4) \
	$(am__objects_3)
tc_example_mtapi_OBJECTS = $(am_tc_example_mtapi_OBJECTS)
tc_example_mtapi_DEPENDENCIES = $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_tc_example_pthread_OBJECTS = tc_example.$(OBJEXT) $(am__objects_5) \
	$(am__objects_3)
tc_example_pthread_OBJECTS = $(am_tc_example_pthread_OBJECTS)
tc_example_pthread_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_tc_fury_fork_OBJECTS = tc_fury.$(OBJEXT) $(am__objects_1) \
	$(am__objects_3)
tc_fury_fork_OBJECTS = $(am_tc_fury_fork_OBJECTS)
tc_fury_fork_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_tc_fury_mtapi_OBJECTS = tc_fury.$(OBJEXT) $(am__objects_4) \
	$(am__objects_3)
tc_fury_mtapi_OBJECTS = $(am_tc_fury_mtapi_OBJECTS)
tc_fury_mtapi_DEPENDENCIES = $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_tc_fury_pthread_OBJECTS = tc_fury.$(OBJEXT) $(am__objects_5) \
	$(am__objects_3)
tc_fury_pthread_OBJECTS = $(am_tc_fury_pthread_OBJECTS)
tc_fury_pthread_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_tc_lock_fork_OBJECTS = tc_lock.$(OBJEXT) $(am__objects_1) \
	$(am__objects_3)
tc_lock_fork_OBJECTS = $(am_tc_lock_fork_OBJECTS)
tc_lock_fork_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_tc_lock_pthread_OBJECTS = tc_lock.$(OBJEXT) $(am__objects_5) \
	$(am__objects_3)
tc_lock_pthread_OBJECTS = $(am_tc_lock_pthread_OBJECTS)
tc_lock_pthread_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_tc_overlap_fork_OBJECTS = tc_overlap.$(OBJEXT) $(am__objects_1) \
	$(am__objects_3)
tc_overlap_fork_OBJECTS = $(am_tc_overlap_fork_OBJECTS)
tc_overlap_fork_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am_tc_overlap_mtapi_OBJECTS = tc_overlap.$(OBJEXT) $(am__objects_4) \
	$(am__objects_3)
tc_overlap_mtapi_OBJECTS = $(am_tc_overlap_mtapi_OBJECTS)
tc_overlap_mtapi_DEPENDENCIES = $(am__DEPENDENCIES_3) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2)
am_tc_overlap_pthread_OBJECTS = tc_overlap.$(OBJEXT) $(am__objects_5) \
	$(am__objects_3)
tc_overlap_pthread_OBJECTS = $(am_tc_overlap_pthread_OBJECTS)
tc_overlap_pthread_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
SOURCES = $(tc_echo_fork_SOURCES) $(tc_echo_mtapi_SOURCES) \
	$(tc_echo_pthread_SOURCES) $(tc_example_fork_SOURCES) \
	$(tc_example_mtapi_SOURCES) $(tc_example_pthread_SOURCES) \
	$(tc_fury_fork_SOURCES) $(tc_fury_mtapi_SOURCES) \
	$(tc_fury_pthread_SOURCES) $(tc_lock_fork_SOURCES) \
	$(tc_lock_pthread_SOURCES) $(tc_overlap_fork_SOURCES) \
	$(tc_overlap_mtapi_SOURCES) $(tc_overlap_pthread_SOURCES)
DIST_SOURCES = $(tc_echo_fork_SOURCES) $(tc_echo_mtapi_SOURCES) \
	$(tc_echo_pthread_SOURCES) $(tc_example_fork_SOURCES) \
	$(tc_example_mtapi_SOURCES) $(tc_example_pthread_SOURCES) \
	$(tc_fury_fork_SOURCES) $(tc_fury_mtapi_SOURCES) \
	$(tc_fury_pthread_SOURCES) $(tc_lock_fork_SOURCES) \
	$(tc_lock_pthread_SOURCES) $(tc_overlap_fork_SOURCES) \
	$(tc_overlap_mtapi_SOURCES) $(tc_overlap_pthread_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/pengsun86/mca-2.0.3/missing --run aclocal-1.9
ADL_SIM = no
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /home/pengsun86/mca-2.0.3/missing --run tar
AR = powerpc-linux-gnu-ar
AUTOCONF = ${SHELL} /home/pengsun86/mca-2.0.3/missing --run autoconf
AUTOHEADER = ${SHELL} /home/pengsun86/mca-2.0.3/missing --run autoheader
AUTOMAKE = ${SHELL} /home/pengsun86/mca-2.0.3/missing --run automake-1.9
AWK = gawk
AdlSim = no
BAREMETAL = 0
BAREMETAL_FALSE = 
BAREMETAL_TRUE = #
CC = powerpc-linux-gnu-gcc
CCAS = powerpc-linux-gnu-gcc
CCASFLAGS =  -ggdb -Wall   
CCDEPMODE = depmode=gcc3
CFLAGS =  -g -Wall -O3    -ggdb -Wall   
CPP = powerpc-linux-gnu-gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GCC_MAJOR = 4
GCC_MINOR = 4
GCC_VERSION = 4.4.1
GREP = /bin/grep
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LD = /opt/freescale/usr/local/gcc-4.4.78-eglibc-2.10.78-1/powerpc-linux-gnu/powerpc-linux-gnu/bin/ld
LDFLAGS = -O3  
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
MAINT = #
MAINTAINER_MODE_FALSE = 
MAINTAINER_MODE_TRUE = #
MAKEINFO = ${SHELL} /home/pengsun86/mca-2.0.3/missing --run makeinfo
NM = /opt/freescale/usr/local/gcc-4.4.78-eglibc-2.10.78-1/powerpc-linux-gnu/bin//powerpc-linux-gnu-nm -B
NMEDIT = 
OBJDUMP = powerpc-linux-gnu-objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = mca
PACKAGE_BUGREPORT = 
PACKAGE_NAME = mca
PACKAGE_STRING = mca 2.0.3
PACKAGE_TARNAME = mca
PACKAGE_VERSION = 2.0.3
PATH_SEPARATOR = :
RANLIB = powerpc-linux-gnu-ranlib
RFLAG = -Wl,-R
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = powerpc-linux-gnu-strip
VERSION = 2.0.3
ac_ct_CC = 
ac_ct_DUMPBIN = 
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = powerpc-unknown-linux-gnu
host_alias = powerpc-linux-gnu
host_cpu = powerpc
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = /home/pengsun86/mca-2.0.3/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = echo
mandir = ${datarootdir}/man
mkdir_p = mkdir -p --
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/pengsun86/mca-build
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target_alias = 

# turn off pthread and fork versions if we are building for baremetal (no OS) 
UTILS = $(top_srcdir)/conker/src/posix_utils.c
#endif
MRAPI_CFLAGS = -I$(top_srcdir)/mrapi/include -I$(top_srcdir)/mrapi/src/mrapi_impl -I$(top_srcdir)/mrapi/src/mrapi_impl/sysvr4
MCAPI_CFLAGS = -I$(top_srcdir)/mcapi/include -I$(top_srcdir)/mcapi/src/mcapi_trans/mcapi_trans_sm
MTAPI_CFLAGS = -I$(top_srcdir)/mtapi/include
MCAPI_LTLIBS = ../../mcapi/src/mcapi_trans/mcapi_trans_sm/mrapi/libmcapi.la
MRAPI_LTLIBS = ../../mrapi/src/mrapi_impl/sysvr4/libmrapi.la
#MRAPI_LTLIBS = ../../mrapi/src/mrapi_impl/baremetal/powerpc/libmrapi.la
MTAPI_LTLIBS = ../../mtapi/src/libmtapi.la

# all non-baremetal programs need to link in pthread because the test harness uses it (even for forked versions)
INCLUDES = -I$(top_srcdir) -I$(top_srcdir)/common -I$(top_srcdir)/conker/include -I../ $(MRAPI_CFLAGS) $(MCAPI_CFLAGS) $(MTAPI_CFLAGS) 
common_SOURCES = $(top_srcdir)/common/mca_utils.c $(UTILS) $(top_srcdir)/conker/src/th_common.c
fork_SOURCES = $(top_srcdir)/conker/src/th_fork.c
pthread_SOURCES = $(top_srcdir)/conker/src/th_pthreads.c
mtapi_SOURCES = $(top_srcdir)/conker/src/th_mtapi.c

# pthread versions
tc_example_pthread_SOURCES = $(top_srcdir)/conker/src/tc_example.c \
	$(pthread_SOURCES) \
	$(common_SOURCES)

tc_example_pthread_LDADD = -lpthread $(MCAPI_LTLIBS) $(MRAPI_LTLIBS)
tc_echo_pthread_SOURCES = $(top_srcdir)/conker/src/tc_echo.c \
	$(pthread_SOURCES) \
	$(common_SOURCES)

tc_echo_pthread_LDADD = -lpthread $(MCAPI_LTLIBS) $(MRAPI_LTLIBS)
tc_overlap_pthread_SOURCES = $(top_srcdir)/conker/src/tc_overlap.c  \
	$(pthread_SOURCES)\
	 $(common_SOURCES)

tc_overlap_pthread_LDADD = -lpthread $(MCAPI_LTLIBS) $(MRAPI_LTLIBS)
tc_fury_pthread_SOURCES = $(top_srcdir)/conker/src/tc_fury.c \
	$(pthread_SOURCES) \
	$(common_SOURCES)

tc_fury_pthread_LDADD = -lpthread $(MCAPI_LTLIBS) $(MRAPI_LTLIBS)
tc_lock_pthread_SOURCES = $(top_srcdir)/conker/src/tc_lock.c \
	$(pthread_SOURCES) \
	$(common_SOURCES)

tc_lock_pthread_LDADD = -lpthread $(MCAPI_LTLIBS) $(MRAPI_LTLIBS)

# fork versions
tc_example_fork_SOURCES = $(top_srcdir)/conker/src/tc_example.c \
	$(fork_SOURCES) \
	$(common_SOURCES)

tc_example_fork_LDADD = -lpthread $(MCAPI_LTLIBS) $(MRAPI_LTLIBS)
tc_echo_fork_SOURCES = $(top_srcdir)/conker/src/tc_echo.c \
	$(fork_SOURCES) \
	$(common_SOURCES)  

tc_echo_fork_LDADD = -lpthread $(MCAPI_LTLIBS) $(MRAPI_LTLIBS)
tc_overlap_fork_SOURCES = $(top_srcdir)/conker/src/tc_overlap.c  \
	$(fork_SOURCES)\
	 $(common_SOURCES)

tc_overlap_fork_LDADD = -lpthread $(MCAPI_LTLIBS) $(MRAPI_LTLIBS)
tc_fury_fork_SOURCES = $(top_srcdir)/conker/src/tc_fury.c \
	$(fork_SOURCES) \
	$(common_SOURCES)

tc_fury_fork_LDADD = -lpthread $(MCAPI_LTLIBS) $(MRAPI_LTLIBS)
tc_lock_fork_SOURCES = $(top_srcdir)/conker/src/tc_lock.c \
	$(fork_SOURCES) \
	$(common_SOURCES)

tc_lock_fork_LDADD = -lpthread $(MCAPI_LTLIBS) $(MRAPI_LTLIBS)

# mtapi versions
tc_example_mtapi_SOURCES = $(top_srcdir)/conker/src/tc_example.c \
	$(mtapi_SOURCES) \
	$(common_SOURCES)

tc_example_mtapi_LDADD = $(MTAPI_LTLIBS) $(MCAPI_LTLIBS) $(MRAPI_LTLIBS) -lpthread  
tc_echo_mtapi_SOURCES = $(top_srcdir)/conker/src/tc_echo.c \
	$(mtapi_SOURCES) \
	$(common_SOURCES)

tc_echo_mtapi_LDADD = $(MTAPI_LTLIBS) $(MCAPI_LTLIBS) $(MRAPI_LTLIBS) -lpthread 
tc_overlap_mtapi_SOURCES = $(top_srcdir)/conker/src/tc_overlap.c  \
	$(mtapi_SOURCES)\
	 $(common_SOURCES)

tc_overlap_mtapi_LDADD = $(MTAPI_LTLIBS) $(MCAPI_LTLIBS) $(MRAPI_LTLIBS) -lpthread 
tc_fury_mtapi_SOURCES = $(top_srcdir)/conker/src/tc_fury.c \
	$(mtapi_SOURCES) \
	$(common_SOURCES)

tc_fury_mtapi_LDADD = $(MTAPI_LTLIBS) $(MCAPI_LTLIBS) $(MRAPI_LTLIBS) -lpthread 
LINK = $(LIBTOOL) --tag=CC --mode=link $(CC) $(LDFLAGS) -o $@
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in: # $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  conker/src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  conker/src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure: # $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4): # $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
tc_echo_fork$(EXEEXT): $(tc_echo_fork_OBJECTS) $(tc_echo_fork_DEPENDENCIES) 
	@rm -f tc_echo_fork$(EXEEXT)
	$(LINK) $(tc_echo_fork_LDFLAGS) $(tc_echo_fork_OBJECTS) $(tc_echo_fork_LDADD) $(LIBS)
tc_echo_mtapi$(EXEEXT): $(tc_echo_mtapi_OBJECTS) $(tc_echo_mtapi_DEPENDENCIES) 
	@rm -f tc_echo_mtapi$(EXEEXT)
	$(LINK) $(tc_echo_mtapi_LDFLAGS) $(tc_echo_mtapi_OBJECTS) $(tc_echo_mtapi_LDADD) $(LIBS)
tc_echo_pthread$(EXEEXT): $(tc_echo_pthread_OBJECTS) $(tc_echo_pthread_DEPENDENCIES) 
	@rm -f tc_echo_pthread$(EXEEXT)
	$(LINK) $(tc_echo_pthread_LDFLAGS) $(tc_echo_pthread_OBJECTS) $(tc_echo_pthread_LDADD) $(LIBS)
tc_example_fork$(EXEEXT): $(tc_example_fork_OBJECTS) $(tc_example_fork_DEPENDENCIES) 
	@rm -f tc_example_fork$(EXEEXT)
	$(LINK) $(tc_example_fork_LDFLAGS) $(tc_example_fork_OBJECTS) $(tc_example_fork_LDADD) $(LIBS)
tc_example_mtapi$(EXEEXT): $(tc_example_mtapi_OBJECTS) $(tc_example_mtapi_DEPENDENCIES) 
	@rm -f tc_example_mtapi$(EXEEXT)
	$(LINK) $(tc_example_mtapi_LDFLAGS) $(tc_example_mtapi_OBJECTS) $(tc_example_mtapi_LDADD) $(LIBS)
tc_example_pthread$(EXEEXT): $(tc_example_pthread_OBJECTS) $(tc_example_pthread_DEPENDENCIES) 
	@rm -f tc_example_pthread$(EXEEXT)
	$(LINK) $(tc_example_pthread_LDFLAGS) $(tc_example_pthread_OBJECTS) $(tc_example_pthread_LDADD) $(LIBS)
tc_fury_fork$(EXEEXT): $(tc_fury_fork_OBJECTS) $(tc_fury_fork_DEPENDENCIES) 
	@rm -f tc_fury_fork$(EXEEXT)
	$(LINK) $(tc_fury_fork_LDFLAGS) $(tc_fury_fork_OBJECTS) $(tc_fury_fork_LDADD) $(LIBS)
tc_fury_mtapi$(EXEEXT): $(tc_fury_mtapi_OBJECTS) $(tc_fury_mtapi_DEPENDENCIES) 
	@rm -f tc_fury_mtapi$(EXEEXT)
	$(LINK) $(tc_fury_mtapi_LDFLAGS) $(tc_fury_mtapi_OBJECTS) $(tc_fury_mtapi_LDADD) $(LIBS)
tc_fury_pthread$(EXEEXT): $(tc_fury_pthread_OBJECTS) $(tc_fury_pthread_DEPENDENCIES) 
	@rm -f tc_fury_pthread$(EXEEXT)
	$(LINK) $(tc_fury_pthread_LDFLAGS) $(tc_fury_pthread_OBJECTS) $(tc_fury_pthread_LDADD) $(LIBS)
tc_lock_fork$(EXEEXT): $(tc_lock_fork_OBJECTS) $(tc_lock_fork_DEPENDENCIES) 
	@rm -f tc_lock_fork$(EXEEXT)
	$(LINK) $(tc_lock_fork_LDFLAGS) $(tc_lock_fork_OBJECTS) $(tc_lock_fork_LDADD) $(LIBS)
tc_lock_pthread$(EXEEXT): $(tc_lock_pthread_OBJECTS) $(tc_lock_pthread_DEPENDENCIES) 
	@rm -f tc_lock_pthread$(EXEEXT)
	$(LINK) $(tc_lock_pthread_LDFLAGS) $(tc_lock_pthread_OBJECTS) $(tc_lock_pthread_LDADD) $(LIBS)
tc_overlap_fork$(EXEEXT): $(tc_overlap_fork_OBJECTS) $(tc_overlap_fork_DEPENDENCIES) 
	@rm -f tc_overlap_fork$(EXEEXT)
	$(LINK) $(tc_overlap_fork_LDFLAGS) $(tc_overlap_fork_OBJECTS) $(tc_overlap_fork_LDADD) $(LIBS)
tc_overlap_mtapi$(EXEEXT): $(tc_overlap_mtapi_OBJECTS) $(tc_overlap_mtapi_DEPENDENCIES) 
	@rm -f tc_overlap_mtapi$(EXEEXT)
	$(LINK) $(tc_overlap_mtapi_LDFLAGS) $(tc_overlap_mtapi_OBJECTS) $(tc_overlap_mtapi_LDADD) $(LIBS)
tc_overlap_pthread$(EXEEXT): $(tc_overlap_pthread_OBJECTS) $(tc_overlap_pthread_DEPENDENCIES) 
	@rm -f tc_overlap_pthread$(EXEEXT)
	$(LINK) $(tc_overlap_pthread_LDFLAGS) $(tc_overlap_pthread_OBJECTS) $(tc_overlap_pthread_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/mca_utils.Po
include ./$(DEPDIR)/posix_utils.Po
include ./$(DEPDIR)/tc_echo.Po
include ./$(DEPDIR)/tc_example.Po
include ./$(DEPDIR)/tc_fury.Po
include ./$(DEPDIR)/tc_lock.Po
include ./$(DEPDIR)/tc_overlap.Po
include ./$(DEPDIR)/th_common.Po
include ./$(DEPDIR)/th_fork.Po
include ./$(DEPDIR)/th_mtapi.Po
include ./$(DEPDIR)/th_pthreads.Po

.c.o:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

tc_echo.o: $(top_srcdir)/conker/src/tc_echo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc_echo.o -MD -MP -MF "$(DEPDIR)/tc_echo.Tpo" -c -o tc_echo.o `test -f '$(top_srcdir)/conker/src/tc_echo.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/tc_echo.c; \
	then mv -f "$(DEPDIR)/tc_echo.Tpo" "$(DEPDIR)/tc_echo.Po"; else rm -f "$(DEPDIR)/tc_echo.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/tc_echo.c' object='tc_echo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc_echo.o `test -f '$(top_srcdir)/conker/src/tc_echo.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/tc_echo.c

tc_echo.obj: $(top_srcdir)/conker/src/tc_echo.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc_echo.obj -MD -MP -MF "$(DEPDIR)/tc_echo.Tpo" -c -o tc_echo.obj `if test -f '$(top_srcdir)/conker/src/tc_echo.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/tc_echo.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/tc_echo.c'; fi`; \
	then mv -f "$(DEPDIR)/tc_echo.Tpo" "$(DEPDIR)/tc_echo.Po"; else rm -f "$(DEPDIR)/tc_echo.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/tc_echo.c' object='tc_echo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc_echo.obj `if test -f '$(top_srcdir)/conker/src/tc_echo.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/tc_echo.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/tc_echo.c'; fi`

th_fork.o: $(top_srcdir)/conker/src/th_fork.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT th_fork.o -MD -MP -MF "$(DEPDIR)/th_fork.Tpo" -c -o th_fork.o `test -f '$(top_srcdir)/conker/src/th_fork.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/th_fork.c; \
	then mv -f "$(DEPDIR)/th_fork.Tpo" "$(DEPDIR)/th_fork.Po"; else rm -f "$(DEPDIR)/th_fork.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/th_fork.c' object='th_fork.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o th_fork.o `test -f '$(top_srcdir)/conker/src/th_fork.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/th_fork.c

th_fork.obj: $(top_srcdir)/conker/src/th_fork.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT th_fork.obj -MD -MP -MF "$(DEPDIR)/th_fork.Tpo" -c -o th_fork.obj `if test -f '$(top_srcdir)/conker/src/th_fork.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/th_fork.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/th_fork.c'; fi`; \
	then mv -f "$(DEPDIR)/th_fork.Tpo" "$(DEPDIR)/th_fork.Po"; else rm -f "$(DEPDIR)/th_fork.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/th_fork.c' object='th_fork.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o th_fork.obj `if test -f '$(top_srcdir)/conker/src/th_fork.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/th_fork.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/th_fork.c'; fi`

mca_utils.o: $(top_srcdir)/common/mca_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mca_utils.o -MD -MP -MF "$(DEPDIR)/mca_utils.Tpo" -c -o mca_utils.o `test -f '$(top_srcdir)/common/mca_utils.c' || echo '$(srcdir)/'`$(top_srcdir)/common/mca_utils.c; \
	then mv -f "$(DEPDIR)/mca_utils.Tpo" "$(DEPDIR)/mca_utils.Po"; else rm -f "$(DEPDIR)/mca_utils.Tpo"; exit 1; fi
#	source='$(top_srcdir)/common/mca_utils.c' object='mca_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mca_utils.o `test -f '$(top_srcdir)/common/mca_utils.c' || echo '$(srcdir)/'`$(top_srcdir)/common/mca_utils.c

mca_utils.obj: $(top_srcdir)/common/mca_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT mca_utils.obj -MD -MP -MF "$(DEPDIR)/mca_utils.Tpo" -c -o mca_utils.obj `if test -f '$(top_srcdir)/common/mca_utils.c'; then $(CYGPATH_W) '$(top_srcdir)/common/mca_utils.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/common/mca_utils.c'; fi`; \
	then mv -f "$(DEPDIR)/mca_utils.Tpo" "$(DEPDIR)/mca_utils.Po"; else rm -f "$(DEPDIR)/mca_utils.Tpo"; exit 1; fi
#	source='$(top_srcdir)/common/mca_utils.c' object='mca_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o mca_utils.obj `if test -f '$(top_srcdir)/common/mca_utils.c'; then $(CYGPATH_W) '$(top_srcdir)/common/mca_utils.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/common/mca_utils.c'; fi`

posix_utils.o: $(top_srcdir)/conker/src/posix_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT posix_utils.o -MD -MP -MF "$(DEPDIR)/posix_utils.Tpo" -c -o posix_utils.o `test -f '$(top_srcdir)/conker/src/posix_utils.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/posix_utils.c; \
	then mv -f "$(DEPDIR)/posix_utils.Tpo" "$(DEPDIR)/posix_utils.Po"; else rm -f "$(DEPDIR)/posix_utils.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/posix_utils.c' object='posix_utils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o posix_utils.o `test -f '$(top_srcdir)/conker/src/posix_utils.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/posix_utils.c

posix_utils.obj: $(top_srcdir)/conker/src/posix_utils.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT posix_utils.obj -MD -MP -MF "$(DEPDIR)/posix_utils.Tpo" -c -o posix_utils.obj `if test -f '$(top_srcdir)/conker/src/posix_utils.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/posix_utils.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/posix_utils.c'; fi`; \
	then mv -f "$(DEPDIR)/posix_utils.Tpo" "$(DEPDIR)/posix_utils.Po"; else rm -f "$(DEPDIR)/posix_utils.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/posix_utils.c' object='posix_utils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o posix_utils.obj `if test -f '$(top_srcdir)/conker/src/posix_utils.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/posix_utils.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/posix_utils.c'; fi`

th_common.o: $(top_srcdir)/conker/src/th_common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT th_common.o -MD -MP -MF "$(DEPDIR)/th_common.Tpo" -c -o th_common.o `test -f '$(top_srcdir)/conker/src/th_common.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/th_common.c; \
	then mv -f "$(DEPDIR)/th_common.Tpo" "$(DEPDIR)/th_common.Po"; else rm -f "$(DEPDIR)/th_common.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/th_common.c' object='th_common.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o th_common.o `test -f '$(top_srcdir)/conker/src/th_common.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/th_common.c

th_common.obj: $(top_srcdir)/conker/src/th_common.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT th_common.obj -MD -MP -MF "$(DEPDIR)/th_common.Tpo" -c -o th_common.obj `if test -f '$(top_srcdir)/conker/src/th_common.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/th_common.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/th_common.c'; fi`; \
	then mv -f "$(DEPDIR)/th_common.Tpo" "$(DEPDIR)/th_common.Po"; else rm -f "$(DEPDIR)/th_common.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/th_common.c' object='th_common.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o th_common.obj `if test -f '$(top_srcdir)/conker/src/th_common.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/th_common.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/th_common.c'; fi`

th_mtapi.o: $(top_srcdir)/conker/src/th_mtapi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT th_mtapi.o -MD -MP -MF "$(DEPDIR)/th_mtapi.Tpo" -c -o th_mtapi.o `test -f '$(top_srcdir)/conker/src/th_mtapi.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/th_mtapi.c; \
	then mv -f "$(DEPDIR)/th_mtapi.Tpo" "$(DEPDIR)/th_mtapi.Po"; else rm -f "$(DEPDIR)/th_mtapi.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/th_mtapi.c' object='th_mtapi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o th_mtapi.o `test -f '$(top_srcdir)/conker/src/th_mtapi.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/th_mtapi.c

th_mtapi.obj: $(top_srcdir)/conker/src/th_mtapi.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT th_mtapi.obj -MD -MP -MF "$(DEPDIR)/th_mtapi.Tpo" -c -o th_mtapi.obj `if test -f '$(top_srcdir)/conker/src/th_mtapi.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/th_mtapi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/th_mtapi.c'; fi`; \
	then mv -f "$(DEPDIR)/th_mtapi.Tpo" "$(DEPDIR)/th_mtapi.Po"; else rm -f "$(DEPDIR)/th_mtapi.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/th_mtapi.c' object='th_mtapi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o th_mtapi.obj `if test -f '$(top_srcdir)/conker/src/th_mtapi.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/th_mtapi.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/th_mtapi.c'; fi`

th_pthreads.o: $(top_srcdir)/conker/src/th_pthreads.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT th_pthreads.o -MD -MP -MF "$(DEPDIR)/th_pthreads.Tpo" -c -o th_pthreads.o `test -f '$(top_srcdir)/conker/src/th_pthreads.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/th_pthreads.c; \
	then mv -f "$(DEPDIR)/th_pthreads.Tpo" "$(DEPDIR)/th_pthreads.Po"; else rm -f "$(DEPDIR)/th_pthreads.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/th_pthreads.c' object='th_pthreads.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o th_pthreads.o `test -f '$(top_srcdir)/conker/src/th_pthreads.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/th_pthreads.c

th_pthreads.obj: $(top_srcdir)/conker/src/th_pthreads.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT th_pthreads.obj -MD -MP -MF "$(DEPDIR)/th_pthreads.Tpo" -c -o th_pthreads.obj `if test -f '$(top_srcdir)/conker/src/th_pthreads.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/th_pthreads.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/th_pthreads.c'; fi`; \
	then mv -f "$(DEPDIR)/th_pthreads.Tpo" "$(DEPDIR)/th_pthreads.Po"; else rm -f "$(DEPDIR)/th_pthreads.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/th_pthreads.c' object='th_pthreads.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o th_pthreads.obj `if test -f '$(top_srcdir)/conker/src/th_pthreads.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/th_pthreads.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/th_pthreads.c'; fi`

tc_example.o: $(top_srcdir)/conker/src/tc_example.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc_example.o -MD -MP -MF "$(DEPDIR)/tc_example.Tpo" -c -o tc_example.o `test -f '$(top_srcdir)/conker/src/tc_example.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/tc_example.c; \
	then mv -f "$(DEPDIR)/tc_example.Tpo" "$(DEPDIR)/tc_example.Po"; else rm -f "$(DEPDIR)/tc_example.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/tc_example.c' object='tc_example.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc_example.o `test -f '$(top_srcdir)/conker/src/tc_example.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/tc_example.c

tc_example.obj: $(top_srcdir)/conker/src/tc_example.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc_example.obj -MD -MP -MF "$(DEPDIR)/tc_example.Tpo" -c -o tc_example.obj `if test -f '$(top_srcdir)/conker/src/tc_example.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/tc_example.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/tc_example.c'; fi`; \
	then mv -f "$(DEPDIR)/tc_example.Tpo" "$(DEPDIR)/tc_example.Po"; else rm -f "$(DEPDIR)/tc_example.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/tc_example.c' object='tc_example.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc_example.obj `if test -f '$(top_srcdir)/conker/src/tc_example.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/tc_example.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/tc_example.c'; fi`

tc_fury.o: $(top_srcdir)/conker/src/tc_fury.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc_fury.o -MD -MP -MF "$(DEPDIR)/tc_fury.Tpo" -c -o tc_fury.o `test -f '$(top_srcdir)/conker/src/tc_fury.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/tc_fury.c; \
	then mv -f "$(DEPDIR)/tc_fury.Tpo" "$(DEPDIR)/tc_fury.Po"; else rm -f "$(DEPDIR)/tc_fury.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/tc_fury.c' object='tc_fury.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc_fury.o `test -f '$(top_srcdir)/conker/src/tc_fury.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/tc_fury.c

tc_fury.obj: $(top_srcdir)/conker/src/tc_fury.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc_fury.obj -MD -MP -MF "$(DEPDIR)/tc_fury.Tpo" -c -o tc_fury.obj `if test -f '$(top_srcdir)/conker/src/tc_fury.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/tc_fury.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/tc_fury.c'; fi`; \
	then mv -f "$(DEPDIR)/tc_fury.Tpo" "$(DEPDIR)/tc_fury.Po"; else rm -f "$(DEPDIR)/tc_fury.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/tc_fury.c' object='tc_fury.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc_fury.obj `if test -f '$(top_srcdir)/conker/src/tc_fury.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/tc_fury.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/tc_fury.c'; fi`

tc_lock.o: $(top_srcdir)/conker/src/tc_lock.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc_lock.o -MD -MP -MF "$(DEPDIR)/tc_lock.Tpo" -c -o tc_lock.o `test -f '$(top_srcdir)/conker/src/tc_lock.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/tc_lock.c; \
	then mv -f "$(DEPDIR)/tc_lock.Tpo" "$(DEPDIR)/tc_lock.Po"; else rm -f "$(DEPDIR)/tc_lock.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/tc_lock.c' object='tc_lock.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc_lock.o `test -f '$(top_srcdir)/conker/src/tc_lock.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/tc_lock.c

tc_lock.obj: $(top_srcdir)/conker/src/tc_lock.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc_lock.obj -MD -MP -MF "$(DEPDIR)/tc_lock.Tpo" -c -o tc_lock.obj `if test -f '$(top_srcdir)/conker/src/tc_lock.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/tc_lock.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/tc_lock.c'; fi`; \
	then mv -f "$(DEPDIR)/tc_lock.Tpo" "$(DEPDIR)/tc_lock.Po"; else rm -f "$(DEPDIR)/tc_lock.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/tc_lock.c' object='tc_lock.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc_lock.obj `if test -f '$(top_srcdir)/conker/src/tc_lock.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/tc_lock.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/tc_lock.c'; fi`

tc_overlap.o: $(top_srcdir)/conker/src/tc_overlap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc_overlap.o -MD -MP -MF "$(DEPDIR)/tc_overlap.Tpo" -c -o tc_overlap.o `test -f '$(top_srcdir)/conker/src/tc_overlap.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/tc_overlap.c; \
	then mv -f "$(DEPDIR)/tc_overlap.Tpo" "$(DEPDIR)/tc_overlap.Po"; else rm -f "$(DEPDIR)/tc_overlap.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/tc_overlap.c' object='tc_overlap.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc_overlap.o `test -f '$(top_srcdir)/conker/src/tc_overlap.c' || echo '$(srcdir)/'`$(top_srcdir)/conker/src/tc_overlap.c

tc_overlap.obj: $(top_srcdir)/conker/src/tc_overlap.c
	if $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT tc_overlap.obj -MD -MP -MF "$(DEPDIR)/tc_overlap.Tpo" -c -o tc_overlap.obj `if test -f '$(top_srcdir)/conker/src/tc_overlap.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/tc_overlap.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/tc_overlap.c'; fi`; \
	then mv -f "$(DEPDIR)/tc_overlap.Tpo" "$(DEPDIR)/tc_overlap.Po"; else rm -f "$(DEPDIR)/tc_overlap.Tpo"; exit 1; fi
#	source='$(top_srcdir)/conker/src/tc_overlap.c' object='tc_overlap.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o tc_overlap.obj `if test -f '$(top_srcdir)/conker/src/tc_overlap.c'; then $(CYGPATH_W) '$(top_srcdir)/conker/src/tc_overlap.c'; else $(CYGPATH_W) '$(srcdir)/$(top_srcdir)/conker/src/tc_overlap.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
